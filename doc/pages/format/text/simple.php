<div id="content">
<?php
include 'pages/format/text/_doc.php';
showNavigation();
?>
<h1 id="sound">Format: Simple Text</h1>

<div class="level1">

<p>
This document is part of eXtensible Binary Universal Protocol project documentation. It contains description of format for storing simple unformatted text
</p>

</div>

<h2 class="sectionedit2" id="description">Description</h2>
<div class="level2">

<p>
Text is one of the very widely used data formats. Also sequence of characters in the <abbr title="American Standard Code for Information Interchange">ASCII</abbr> and the other became the foundation of many advanced formats.
</p>

</div>

<h2 class="sectionedit3" id="text_file">Text File</h2>
<div class="level2">

<p>
As an initial example, consider a simple file with only one element in the box and through the transformation from an extended area. This will define the general head of any classical text file.
</p>

<p>
<em>Expected structure of the document</em>
</p>

<p>
Specification&#039;s Block<br/>

</p>
<ul>
<li class="level1"><div class="li"> Link to Catalog<br/>
</div>
</li>
<li class="level1"><div class="li"> Multiline Text<br/>
</div>
<ul>
<li class="level2"><div class="li"> Used Encoding<br/>
</div>
</li>
<li class="level2"><div class="li"> Language (non-mandatory)<br/>
</div>
</li>
<li class="level2"><div class="li"> Link to Extended Area</div>
</li>
</ul>
</li>
</ul>

<p>
The following simplified version is used in a test version of xbteditor. It is more simple, because the proposal did not include the transformation blocks.
</p>

<p>
<em>Text file format variant used in xbteditor-0.0.2</em>
</p>

<p>
Specification&#039;s Block<br/>

</p>
<ul>
<li class="level1"><div class="li"> Used Encoding<br/>
</div>
<ul>
<li class="level2"><div class="li"> Link to Extended Area</div>
</li>
</ul>
</li>
</ul>

</div>

<h3 class="sectionedit4" id="multiline_text">Multiline Text</h3>
<div class="level3">

<p>
In the case that we intend to store multiple lines of text, we have to face following problem: In theory, it is an array of text items. Yet we would like to use the classic solution to tagging line breaks using CR + LF combination (depending on your operating system). This can be reasonably addressed by the transformation block, data-into-tree type, which converts the text to the required form.
</p>

<p>
The used variant encapsulates data using array-type block and also each single block of text is generated by the extraction of the data block.
</p>

<p>
<em>Notes:</em>
</p>
<ul>
<li class="level1"><div class="li"> It would be possible to merge blocks for multiline text and transform it into single one. Does such operation make sense and would it be appropriate at all? (What should be wrapped by the functional blocks)</div>
</li>
<li class="level1"><div class="li"> It might be appropriate to consider various kinds of encoding using similar approach like <abbr title="Cascading Style Sheets">CSS</abbr></div>
</li>
<li class="level1"><div class="li"> For multiline text, should be given the encoding globally or for single lines?</div>
</li>
</ul>

</div>

</div>
</body>
</html>